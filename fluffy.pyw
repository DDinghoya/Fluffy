#! /usr/bin/env python3
# -*- coding: utf-8 -*-
"""""
"Pink Donut" design was designed by fourminute exclusively for 
Fluffy and does not infringe on any copyright.

Copyright (c) 2019 fourminute (https://github.com/fourminute)

Fluffy is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Fluffy is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""""
# Imports
import signal
import time
import socket
import base64
import os
import sys
import threading
import struct
import random
import re
import configparser 
try:
    import logging
    if os.path.isfile('fluffy.log'):
        os.remove('fluffy.log')
    LOG_FILENAME = 'fluffy.log'
    logging.basicConfig(filename=LOG_FILENAME, level=logging.DEBUG)
    logging.debug("Fluffy Log: If you see nothing here. Good!")
    is_logging = True
except:
    is_logging = False
    pass
try:
    import psutil
except:
    if is_logging:
        logging.error(e, exc_info=True)
    else:
        print(str(e))
    exit()
try:
    from tkinter import filedialog
    import tkinter as tk
    root = tk.Tk()
    root.withdraw()
except Exception as e:
    if is_logging:
        logging.error(e, exc_info=True)
    else:
        print(str(e))
    exit()
try:
    from SimpleHTTPServer import SimpleHTTPRequestHandler
    from SocketServer import TCPServer
    from urllib import quote
except ImportError:
    from http.server import SimpleHTTPRequestHandler
    from socketserver import TCPServer
    from urllib.parse import quote
try:
    from PyQt5 import QtWidgets
    from PyQt5.QtCore import Qt, QThread, QByteArray
    from PyQt5.QtWidgets import *
    from PyQt5.QtGui import QIcon, QPixmap, QColor, QImage
    app = QtWidgets.QApplication(sys.argv)
    window = QMainWindow()
except Exception as e:
    if is_logging:
        logging.error(e, exc_info=True)
    else:
        print(str(e))
    exit()
try:
    import usb.core
    import usb.util
    usb_success = True
except:
    usb_success = False
    pass

# Variables
VERSION = "2.9.0"
thanks = ["YoyPa","Sev73n","wendyliga","TheZoc","TheLastZombie","friedkeenan","danypava", "DavidOliM","TorpedoXL","gut5"]
GREEN = "QLabel {color: #09A603;}"
BLUE = "QLabel {color: #00A2FF;}"
RED = "QLabel {color: #cc2249;}"
PURPLE = "QLabel {color: #7F0CE8;}"
goldpixmap = QPixmap()
iconpixmap = QPixmap()
inlaypixmap = QPixmap()
dinlaypixmap = QPixmap()
aboutpixmap = QPixmap()
transfer_rate = 0
is_installing = False
last_error = "NA"
is_done = False
is_network = False
is_goldleaf = False 
selected_dir = None
selected_files = None
sent_header = False
start_time = time.time()
cur_transfer_rate = 0
last_transfer_rate = 0
cur_progress = 0
end_progress = 0
cur_nsp_count = 1
total_nsp = 0
cur_nsp_name = "NA"
if "win" in sys.platform[:3].lower():
    initial_dir = os.getcwd() + "/"
elif "linux" in sys.platform.lower():
    initial_dir = os.path.expanduser('~') + "./config/"
else: # MacOS. A little help here would be great.
    initial_dir = os.getcwd() + "/"
switch_ip = "0.0.0.0"
host_ip = "0.0.0.0"
language = 0
qresponse = False
needresponse = False
qrespnum = 0
haveresponse = False
allow_access_non_nsp = 0
ignore_warning_prompt = 0
global_dev = None
global_in = None
global_out = None
task_canceled = False
about_width = 0
about_height = 0

# Load Settings
if os.path.isfile(initial_dir + 'fluffy.conf'):
    try:
        with open(initial_dir + 'fluffy.conf') as cfgfile:
            configp = configparser.ConfigParser()
            configp.read_file(cfgfile)
            switch_ip = configp.get('DEFAULT', 'switch_ip')
            dark_mode = int(configp.get('DEFAULT', 'dark_mode'))
            language = int(configp.get('DEFAULT', 'language'))
            allow_access_non_nsp = int(configp.get('DEFAULT', 'allow_access_non_nsp'))
            ignore_warning_prompt = int(configp.get('DEFAULT', 'ignore_warning_prompt'))
    except:
        switch_ip = "0.0.0.0"
        dark_mode = 0
        language = 0
        allow_access_non_nsp = 0
        ignore_warning_prompt = 0
        pass
else:
    switch_ip = "0.0.0.0"
    dark_mode = 0
    language = 0
    allow_access_non_nsp = 0
    ignore_warning_prompt = 0

ABOUT_DATA = b''
GOLD_DATA = b''
ICON_DATA = b''
DARK_DONUT_DATA = b''
DONUT_DATA = b'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'
class TransferRates:
    Safe = 0x1F4
    Normal = 0x100000
TransferRateDict  = {0: TransferRates.Safe,
                     1: TransferRates.Normal}

# "Language!" -Cap, May 1st 2015
def set_language(v):
    global language
    language = v
    if v == 0:
        Language.CurrentDict = Language.EnglishDict
    elif v == 1:
        Language.CurrentDict = Language.ChineseDict
    elif v == 2:
        Language.CurrentDict = Language.VietDict
    elif v == 3:
        Language.CurrentDict = Language.TurkishDict
    elif v == 4:
        Language.CurrentDict = Language.BrazilianDict
    elif v == 5:
        Language.CurrentDict = Language.ItalianDict
    elif v == 6:
        Language.CurrentDict = Language.FrenchDict
    elif v == 7:
        Language.CurrentDict = Language.SpanishDict
    elif v == 8:
        Language.CurrentDict = Language.GermanDict
    elif v == 9:
        Language.CurrentDict = Language.IndonesiaDict
        
class Language:
    CurrentDict = None
    EnglishDict = {0: "Fluffy",
                  1: "Begin Transfer",
                  2: "Switch IP",
                  3: "This Computer's IP",
                  4: "USB Transfer Mode",
                  5: "Normal Mode",
                  6: "Safe Mode",
                  7: "Current NSP",
                  8: "Successfully Installed",
                  9: "Awaiting Selection",
                  10: "Switch Not Detected",
                  11: "Switch Detected",
                  12: "Network Mode",
                  13: "NSP Selection",
                  14: "NSP(s) Selected",
                  15: "Awaiting Connection Request",
                  16: "Cancel",
                  17: "Error: Goldleaf threw an exception.",
                  18: "Error: Tinfoil threw an exception.",
                  19: "Error: Network threw an exception.",
                  20: "Dark Mode",
                  21: "Options",
                  22: "Language",
                  23: "Github",
                  24: "Network",
                  25: "Headers Sent",
                  26: "NSP(s) in Queue",
                  27: "Installing",
                  28: "Transfer Rate",
                  29: "Current NCA",
                   }
    
    ChineseDict = {0: "Fluffy 卷卷安装器",
                  1: "开始传输",
                  2: "Switch的IP地址",
                  3: "此电脑的IP地址",
                  4: "USB传输模式",
                  5: "正常模式",
                  6: "安全模式",
                  7: "当前的NSP游戏文件",
                  8: "成功安装",
                  9: "等待选择",
                  10: "Switch没有连接",
                  11: "Switch已连接",
                  12: "网络模式",
                  13: "选择NSP游戏文件",
                  14: "个NSP游戏文件 已选择",
                  15: "等待连接",
                  16: "取消",
                  17: "错误: Goldleaf 反馈了一个异常.",
                  18: "错误: Tinfoil 反馈了一个异常.",
                  19: "错误: 网络状态 反馈了一个异常.",
                  20: "黑暗模式",
                  21: "选项",
                  22: "语言切换",
                  23: "Github主页地址",
                  24: "网络",
                  25: "发送NSP头文件",
                  26: "个NSP游戏文件 在队列中",
                  27: "NSP游戏文件 安装中",
                  28: "传输速率",
                  29: "当前的NCA游戏文件包",
                   }

    VietDict = {  0: "Fluffy",
                  1: "Bắt Đầu Chuyển",
                  2: "IP Của Switch",
                  3: "IP Của Máy Vi Tính",
                  4: "Tốc Độ USB",
                  5: "Tốc Độ Bình Thường",
                  6: "Tốc Độ Chậm",
                  7: "Đang Chuyển NSP",
                  8: "Tải Xông",
                  9: "Hãy Chọn NSP Của Bạn",
                  10: "Không Thể Tìm Thấy Switch Của Bạn",
                  11: "Tìm Được Switch Của Bạn",
                  12: "Bạn Đã Chọn Chuyển Bằng Wi-Fi",
                  13: "Xin Vui Lòng Chọn NSP",
                  14: "Cái NSP(s) Đã Được Chọn",
                  15: "Đang Chờ Yêu Cầu Kết Nối",
                  16: "Hủy Bỏ",
                  17: "Error: Goldleaf ngừng hoạt động.",
                  18: "Error: Tinfoil ngừng hoạt động.",
                  19: "Error: Network ngừng hoạt động.",
                  20: "Hình Tối",
                  21: "Sự Lựa Chọn",
                  22: "Ngôn Ngữ",
                  23: "Github",
                  24: "Network",
                  25: "Danh Sách NSP Đã Gởi Cho Bạn",
                  26: "Đang Chờ Chuyển NSP(s)",
                  27: "Đang Tải",
                  28: "Tốc Độ",
                  29: "Đang Chuyển NCA",
                   }
    
    BrazilianDict = {0: "Fluffy",
                  1: "INICIAR TRANSFERÊNCIA",
                  2: "IP do Switch",
                  3: "IP deste computador",
                  4: "Modo de transferência USB",
                  5: "Modo normal",
                  6: "Modo seguro",
                  7: "NSP atual",
                  8: "Instalado com sucesso",
                  9: "Aguardando seleção",
                  10: "Switch não detectado",
                  11: "Switch detectado",
                  12: "Modo de rede",
                  13: "Selecione o NSP",
                  14: "NSP(s) selecionados",
                  15: "Aguardando pedido de conexão",
                  16: "CANCELAR",
                  17: "Erro: Problema reportado pelo Goldleaf.",
                  18: "Erro: Problema reportado pelo Tinfoil.",
                  19: "Erro: Problema reportado pela rede.",
                  20: "Tema escuro",
                  21: "Opções",
                  22: "Língua",
                  23: "Github",
                  24: "Rede",
                  25: "Cabeçalho enviado",
                  26: "NSP(s) em fila",
                  27: "Instalando",
                  28: "Velocidade de transferência",
                  29: "NCA atual",
                   }
    
    ItalianDict = {0: "Fluffy",
                  1: "Inizia Trasferimento",
                  2: "IP della Switch",
                  3: "IP di questo Computer",
                  4: "Trasferimento USB",
                  5: "Modalità Normale",
                  6: "Modalità Sicura",
                  7: "NSP Corrente",
                  8: "Installazione Avvenuta con Successo",
                  9: "In attesa di selezione",
                  10: "Switch Non Rilevata",
                  11: "Switch Rilevata",
                  12: "Modalità Network",
                  13: "Seleziona NSP",
                  14: "NSP(s) Selezionato(i)",
                  15: "In Attesa di Richiesta di Connessione",
                  16: "Annulla",
                  17: "Errore: Goldleaf ha lanciato una eccezione.",
                  18: "Errore: Tinfoil ha lanciato una eccezione.",
                  19: "Errore: eccezione nella Modalità Network.",
                  20: "Dark Mode",
                  21: "Opzioni",
                  22: "Lingua",
                  23: "Github",
                  24: "Network",
                  25: "Headers Inviati",
                  26: "NSP(s) in Coda",
                  27: "Installazione in Corso",
                  28: "Velocità di Trasferimento",
                  29: "NCA Corrente",
                  }


    TurkishDict = {0: "Fluffy",
                  1: "Aktarmaya Başla",
                  2: "Switch IP 'si",
                  3: "Bu bilgisayarın IP 'si",
                  4: "USB Transfer Modu",
                  5: "Normal Mod",
                  6: "Güvenli Mod",
                  7: "Şu anki NSP",
                  8: "Başarıyla Yüklendi",
                  9: "Seçim Bekleniyor",
                  10: "Switch Algılanamadı",
                  11: "Switch Algılandı",
                  12: "Ağ Modu",
                  13: "NSP Seçimi",
                  14: "NSP(ler) Seçildi",
                  15: "Bağlantı İsteği Bekleniyor",
                  16: "İptal",
                  17: "Hata: Goldleaf 'te sıradışı durum oluştu.",
                  18: "Hata: Tinfoil 'de sıradışı durum oluştu.",
                  19: "Hata: Ağda sıradışı durum oluştu.",
                  20: "Karanlık Mod",
                  21: "Ayarlar",
                  22: "Dil",
                  23: "Github",
                  24: "Ağ",
                  25: "Başlık Gönderildi",
                  26: "Sıradaki NSP(ler)",
                  27: "Yükleniyor",
                  28: "Aktarma Hızı",
                  29: "Şu anki NCA",
                   }
    
    FrenchDict = {0: "Fluffy",
                  1: "Démarrer le Transfert",
                  2: "IP de la Switch",
                  3: "IP de l'Ordinateur",
                  4: "Mode de Transfert USB",
                  5: "Mode Normal",
                  6: "Mode Sûr",
                  7: "NSP Actuel",
                  8: "Installé Avec Succès",
                  9: "En Attente de Sélection",
                  10: "Switch Non Détecté",
                  11: "Switch Détecté",
                  12: "Mode Réseau",
                  13: "Ajouter NSP",
                  14: "NSP(s) Sélectionné(s)",
                  15: "En Attente de la Demande de Connection",
                  16: "Annuler",
                  17: "Erreur: Goldleaf a généré une exception.",
                  18: "Erreur: Tinfoil a généré une exception.",
                  19: "Erreur: Le réseau a généré une exception.",
                  20: "Mode Sombre",
                  21: "Options",
                  22: "Langue",
                  23: "Github",
                  24: "Réseau",
                  25: "En-têtes Envoyées",
                  26: "NSP(s) en File d'Attente",
                  27: "En Cours d'Installation",
                  28: "Débit",
                  29: "NCA Actuel",
                   }
    
    SpanishDict = {0: "Fluffy",
                  1: "Iniciar la Transferencia",
                  2: "IP de la Switch",
                  3: "IP del Ordenador",
                  4: "Modo de Transferencia USB",
                  5: "Modo Normal",
                  6: "Modo Seguro",
                  7: "NSP Actual",
                  8: "Instalado Con Éxito",
                  9: "Esperando Selección",
                  10: "Switch No Detectada",
                  11: "Switch Detectada",
                  12: "Modo Red",
                  13: "Añadir NSP",
                  14: "NSP(s) Seleccionado(s)",
                  15: "Esperando la Solicitud de Conexión",
                  16: "Cancelar",
                  17: "Error: Goldleaf ha generado una excepción.",
                  18: "Error: Tinfoil ha generado une excepción.",
                  19: "Error: El red ha generado une excepción.",
                  20: "Modo Oscuro",
                  21: "Opciones",
                  22: "Idioma",
                  23: "Github",
                  24: "Red",
                  25: "Cabeceras Enviadas",
                  26: "NSP(s) en la Cola",
                  27: "Instalando",
                  28: "Velocidad",
                  29: "NCA Actual",
                   }

    GermanDict = {0: "Fluffy",
                  1: "Übertragung starten",
                  2: "Switch-IP-Adresse",
                  3: "Computer-IP-Adresse",
                  4: "USB-Übertragungsmodus",
                  5: "Normaler Modus",
                  6: "Sicherer Modus",
                  7: "Momentane NSP",
                  8: "Erfolgreich installiert",
                  9: "Warte auf Auswahl",
                  10: "Keine Switch erkannt",
                  11: "Switch erkannt",
                  12: "Netzwerk-Modus",
                  13: "NSP-Auswahl",
                  14: "NSP(s) ausgewählt",
                  15: "Warte auf Verbindung",
                  16: "Abbrechen",
                  17: "Goldleaf-Fehler!",
                  18: "Tinfoil-Fehler!",
                  19: "Netzwerk-Fehler!",
                  20: "Dunkles Design",
                  21: "Einstellungen",
                  22: "Sprache",
                  23: "GitHub",
                  24: "Netzwerk",
                  25: "Header gesendet",
                  26: "NSP(s) in Warteschlange",
                  27: "Installiere",
                  28: "Transferrate",
                  29: "Momentane NCA",
                   }

    IndonesiaDict = {0: "Fluffy",
                  1: "Memulai Transfer",
                  2: "Ganti IP",
                  3: "IP Komputer Ini",
                  4: "Mode Transfer melalui USB",
                  5: "Mode Normal",
                  6: "Mode Aman",
                  7: "NSP Saat Ini",
                  8: "Penerapaan Berhasil",
                  9: "Menunggu Pilihan",
                  10: "Switch tidak terdeteksi",
                  11: "Switch terdeteksi",
                  12: "Mode Jaringan",
                  13: "Pemilihan NSP",
                  14: "NSP(s) Terpilih",
                  15: "Menunggu Request Koneksi",
                  16: "Batal",
                  17: "Error: Goldleaf Melemparkan Pengecualian.",
                  18: "Error: Tinfoil Melemparkan Pengecualian.",
                  19: "Error: Jaringan Melemparkan Pengecualian.",
                  20: "Mode Gelap",
                  21: "Opsi",
                  22: "Bahasa",
                  23: "Github",
                  24: "Jaringan",
                  25: "Headers Terkirim",
                  26: "NSP dalam Antrian",
                  27: "Menerapkan",
                  28: "Kecepatan Transfer",
                  29: "NCA Saat Ini",
                   }
                   
				   
set_language(language)
# End Language

# Setters
def set_dark_mode(v):
    global dark_mode
    if v == 0:
        import qdarkstyle
        app.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5())
        dark_mode = 0
        l_github.setStyleSheet("QLabel { color: rgba(255, 255, 255, 50%) }")
        pixmap = QPixmap(dinlaypixmap)
        gold_res = QPixmap(goldpixmap)
        about_res = QPixmap(aboutpixmap)
        screen = app.primaryScreen()
        if screen.size().width() <= 2560:
            if screen.size().width() <= 1920:
                if screen.size().width() <= 1366:
                    lowresfix = pixmap.scaled(230, 200, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix2 = gold_res.scaled(230, 200, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix3 = about_res.scaled(230, 200, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    img_label.setPixmap(lowresfix)
                    gold_img_label.setPixmap(lowresfix2)
                    about_img_label.setPixmap(lowresfix3)
                    about_width = lowresfix3.size().width()
                    about_height = lowresfix3.size().height()
                else:
                    lowresfix = pixmap.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix2 = gold_res.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix3 = about_res.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    img_label.setPixmap(lowresfix)
                    gold_img_label.setPixmap(lowresfix2)
                    about_img_label.setPixmap(lowresfix3)
                    about_width = lowresfix3.size().width()
                    about_height = lowresfix3.size().height()
            else:
                lowresfix = pixmap.scaled(350, 240, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                lowresfix2 = gold_res.scaled(350, 240, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                lowresfix3 = about_res.scaled(350, 240, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                img_label.setPixmap(lowresfix)
                gold_img_label.setPixmap(lowresfix2)
                about_img_label.setPixmap(lowresfix3)
                about_width = lowresfix3.size().width()
                about_height = lowresfix3.size().height()
        else:
            img_label.setPixmap(pixmap)
            gold_img_label.setPixmap(gold_res)
            about_img_label.setPixmap(about_res)
            about_width = about_res.size().width()
            about_height = about_res.size().height()
    else:
        dark_mode = 1
        pixmap = QPixmap(inlaypixmap)
        gold_res = QPixmap(goldpixmap)
        about_res = QPixmap(aboutpixmap)
        screen = app.primaryScreen()
        app.setStyleSheet("")
        l_github.setStyleSheet("QLabel { color: rgba(0, 0, 0, 50%) }")
        if screen.size().width() <= 2560:
            if screen.size().width() <= 1920:
                if screen.size().width() <= 1366:
                    lowresfix = pixmap.scaled(230, 200, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix2 = gold_res.scaled(230, 200, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix3 = about_res.scaled(230, 200, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    img_label.setPixmap(lowresfix)
                    gold_img_label.setPixmap(lowresfix2)
                    about_img_label.setPixmap(lowresfix3)
                    about_width = about_img_label.size().width()
                    about_height = about_img_label.size().height()
                else:
                    lowresfix = pixmap.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix2 = gold_res.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    lowresfix3 = about_res.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                    img_label.setPixmap(lowresfix)
                    gold_img_label.setPixmap(lowresfix2)
                    about_img_label.setPixmap(lowresfix3)
                    about_width = about_img_label.size().width()
                    about_height = about_img_label.size().height()
            else:
                lowresfix = pixmap.scaled(350, 240, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                lowresfix2 = gold_res.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                lowresfix3 = about_res.scaled(270, 270, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                img_label.setPixmap(lowresfix)
                gold_img_label.setPixmap(lowresfix2)
                about_img_label.setPixmap(lowresfix3)
                about_width = about_img_label.size().width()
                about_height = about_img_label.size().height()
        else:
            img_label.setPixmap(pixmap)
            gold_img_label.setPixmap(gold_res)
            about_img_label.setPixmap(about_res)
            about_width = about_img_label.size().width()
            about_height = about_img_label.size().height()
            

def turn_off_logging():
    global is_logging
    is_logging = False
    
def set_nca_name(v):
    global cur_nca_name
    cur_nca_name = v

def set_start_time():
    global start_time
    start_time = time.time()

def set_canceled(x):
    global task_canceled
    task_canceled = x
    
def set_cur_transfer_rate(v):
    global cur_transfer_rate
    cur_transfer_rate = v

def set_sent_header():
    global sent_header
    sent_header = True

def set_last_transfer_rate(v):
    global last_transfer_rate
    last_transfer_rate = v

def detach_switch():
    global global_dev
    global global_out
    global global_in
    try:
        usb.util.dispose_resources(global_dev)
        global_dev.reset()
    except:
        pass
    global_in = None
    global_out = None
    global_dev = None
        
def connect_switch():
    global global_dev
    global global_out
    global global_in
    global_dev = usb.core.find(idVendor=0x057E, idProduct=0x3000)
    if global_dev is not None:
        try:
            global_dev.set_configuration()
            intf = global_dev.get_active_configuration()[(0,0)]
            global_out = usb.util.find_descriptor(intf,custom_match=lambda e:usb.util.endpoint_direction(e.bEndpointAddress)==usb.util.ENDPOINT_OUT)
            global_in = usb.util.find_descriptor(intf,custom_match=lambda e:usb.util.endpoint_direction(e.bEndpointAddress)==usb.util.ENDPOINT_IN)
            return True
        except:
            return False
            pass
    else:
        return False

def save_config():
    try:
        configp = configparser.ConfigParser()
        configp['DEFAULT'] = {'switch_ip': switch_ip,
                              'language': language,
                              'dark_mode': dark_mode,
                              'allow_access_non_nsp': allow_access_non_nsp,
                              'ignore_warning_prompt': ignore_warning_prompt}
        with open(initial_dir + 'fluffy.conf', 'w') as cfgfile:
            configp.write(cfgfile)
    except:
        pass
                
def set_transfer_rate(v):
    global transfer_rate
    transfer_rate = TransferRateDict[v]

def get_response_qmessage(e):
    global needresponse
    global qrespnum
    needresponse = True
    qrespnum = e
    
def set_response_qmessage(x):
    global qresponse
    global haveresponse
    haveresponse = True
    qresponse = x

    
def reset_response():
    global needresponse
    global qresponse
    global haveresponse
    needresponse = False
    qresponse = False
    haveresponse = False
    

def set_dir(d):
    global selected_dir
    selected_dir = d
   
def set_selected_files(f):
    global selected_files
    selected_files = f
    
def set_progress(c, e):
    global cur_progress
    global end_progress
    end_progress = e
    cur_progress = c

def set_cur_nsp(nsp):
    global cur_nsp_name
    global cur_nsp_count
    if cur_nsp_name != nsp:
        if cur_nsp_name == "NA":
            cur_nsp_name = nsp
        else:
            cur_nsp_count += 1
            cur_nsp_name = nsp
            set_start_time()
            last_progress = 0
            
def cancel_task():
    set_canceled(True)
    reset_install()

def set_total_nsp(n):
    global total_nsp
    total_nsp = n
    
def complete_install():
    global is_done
    is_done = True

def complete_goldleaf_transfer():
    global is_installing
    is_installing = False
    
def reset_install():
    global is_installing
    global sent_header
    global is_done
    global cur_progress
    global end_progress
    global cur_nsp_name
    global cur_transfer_rate
    global last_transfer_rate
    global selected_files
    global selected_dir
    global total_nsp
    global cur_nsp_count
    list_nsp.clear()
    btn_header.setEnabled(True)
    btn_nsp.setEnabled(True)
    combo.setEnabled(True)
    txt_ip.setEnabled(True)
    txt_ip2.setEnabled(True)
    net_radio.setEnabled(True)
    usb_radio.setEnabled(True)
    txt_port.setEnabled(True)
    tin_radio.setEnabled(True)
    gold_radio.setEnabled(True)
    l_nsp.setText("")
    l_nsp.setStyleSheet("")
    l_switch.setText("")
    l_switch.setStyleSheet("")
    l_status.setStyleSheet("")
    if is_goldleaf:
        l_status.setText('')
    progressbar.setValue(0)
    cur_nsp_count = 1
    total_nsp = 0
    selected_files = None
    selected_dir = None
    cur_nsp_name = "NA"
    cur_transfer_rate = 0
    last_transfer_rate = 0
    is_done = False
    is_installing = False
    sent_header = False
    cur_progress = 0
    end_progress = 100
    init_language()
    window.menuBar().setEnabled(True)
    if is_network:
        net_radio_cmd()
    else:
        usb_radio_cmd()

def throw_error(_type):
    global last_error
    if _type == 0:
        last_error = Language.CurrentDict[17] # Goldleaf
    elif _type == 1:
        last_error = Language.CurrentDict[19] # Network
    elif _type == 2:
        last_error = Language.CurrentDict[18] # Tinfoil

def reset_last_error():
    global last_error
    last_error = "NA"
    
def complete_loading():
    global is_installing
    is_installing = True

def set_network(v):
    global is_network
    is_network = v
    
def set_ip(v, n):
    global switch_ip
    global host_ip
    if n == 0:
        switch_ip = v
    else:
        host_ip = v

def set_goldleaf(v):
    global is_goldleaf
    is_goldleaf = v
    
# Goldleaf            
class GoldleafCommandId:
    ListSystemDrives = 0
    GetEnvironmentPaths = 1
    GetPathType = 2
    ListDirectories = 3
    ListFiles = 4
    GetFileSize = 5
    FileRead = 6
    FileWrite = 7
    CreateFile = 8
    CreateDirectory = 9
    DeleteFile = 10
    DeleteDirectory = 11
    RenameFile = 12
    RenameDirectory = 13
    GetDriveTotalSpace = 14
    GetDriveFreeSpace = 15
    GetNSPContents = 16
    Max = 17

class GoldleafCommandReadResult:
    Success = 0
    InvalidMagic = 1
    InvalidGoldleafCommandId = 2

class Goldleaf:
    GLUC         = b"GLUC"
    magic        = b"GLUC"
    cmd_id       = 0
    drives       = {}
    
    def init(self):
        try:
            detach_switch()
            connect_switch()
            self.goldleaf_usb()
        except Exception as e:
            if is_logging:
                logging.error(e, exc_info=True)
            throw_error(0)
            sys.exit()
        
    def write(self,buffer):
        try:
            global_out.write(buffer,timeout=3000)
        except:
            pass

    def read(self,length):
        return global_in.read(length,timeout=0).tobytes()
        
    def write_u32(self,x):
        try:
            global_out.write(struct.pack("<I", x))
        except:
            pass
        
    def write_u64(self,x):
        try:
            global_out.write(struct.pack("<Q", x))
        except:
            pass
        
    def write_string(self,x):
        try:
            self.write_u32(len(x))
            self.write(x.encode())
        except:
            pass
        
    def read_u32(self):
        return struct.unpack("<I", self.read(4))[0]
    
    def read_u64(self):
        return struct.unpack("<Q", self.read(8))[0]
    
    def read_string(self):
        return self.read(self.read_u32() + 1)[:-1].decode()
    
    def magic_ok(self):
        return self.GLUC == self.magic
        
    def is_id(self,a_cmd):
        return a_cmd == self.cmd_id
    
    def read_cmd(self):
        try:
            self.magic = self.read(4)
            self.cmd_id = self.read_u32()
        except:
            pass
        
    def write_cmd(self,a_cmd):
        try:
            self.write(self.magic)
            self.write_u32(a_cmd)
        except:
            pass

    def read_path(self):
        path = self.read_string()
        drive = path.split(":", 1)[0]
        try:
            path = path.replace(drive + ":", self.drives[drive])
        except KeyError:
            pass
        return path
    
    def goldleaf_usb(self):
        while global_dev is not None:
            self.read_cmd()
            if self.magic_ok():
                if self.is_id(GoldleafCommandId.ListSystemDrives):
                    drive_labels = {}
                    if "win" in sys.platform[:3].lower():
                        import string
                        import ctypes
                        kernel32 = ctypes.windll.kernel32
                        bitmask = kernel32.GetLogicalDrives()
                        for letter in string.ascii_uppercase:
                            if bitmask & 1:
                                self.drives[letter] = letter + ":/"
                                label_buf = ctypes.create_unicode_buffer(1024)
                                kernel32.GetVolumeInformationW(
                                    ctypes.c_wchar_p(letter + ":\\"),
                                    label_buf,
                                    ctypes.sizeof(label_buf),
                                    None,
                                    None,
                                    None,
                                    None,
                                    0
                                    )
                                if label_buf.value:
                                    drive_labels[letter] = label_buf.value
                            bitmask >>= 1
                    else:
                        self.drives["ROOT"] = "/"
                    self.write_u32(len(self.drives))
                    for d in self.drives:
                        try:
                            self.write_string(drive_labels[d])
                        except KeyError:
                            self.write_string(d)
                        self.write_string(d)
                elif self.is_id(GoldleafCommandId.GetEnvironmentPaths):
                    env_paths = {x:os.path.expanduser("~/"+x) for x in ["Desktop", "Documents"]}
                    for arg in sys.argv[1:]:
                        folder = os.path.abspath(arg)
                        if os.path.isfile(folder):
                            folder = os.path.dirname(folder)
                        env_paths[os.path.basename(folder)] = folder
                    self.write_u32(len(env_paths))
                    for env in env_paths:
                        env_paths[env] = env_paths[env].replace("\\", "/")
                        self.write_string(env)
                        if env_paths[env][1:3] != ":/":
                            env_paths[env] = "ROOT:" + env_paths[env]
                        self.write_string(env_paths[env])
                elif self.is_id(GoldleafCommandId.GetPathType):
                    ptype = 0
                    path = self.read_path()
                    if os.path.isfile(path):
                        ptype = 1
                    elif os.path.isdir(path):
                        ptype = 2
                    self.write_u32(ptype)
                elif self.is_id(GoldleafCommandId.ListDirectories):
                    path = self.read_path()
                    ents = [x for x in os.listdir(path) if os.path.isdir(os.path.join(path, x))]
                    self.write_u32(len(ents))
                    for name in ents:
                        self.write_string(name)
                elif self.is_id(GoldleafCommandId.ListFiles):
                    if is_installing:
                        complete_goldleaf_transfer()
                    path = self.read_path()
                    ents = [x for x in os.listdir(path) if os.path.isfile(os.path.join(path, x))]
                    self.write_u32(len(ents))
                    for name in ents:
                        self.write_string(name)
                elif self.is_id(GoldleafCommandId.GetFileSize):
                    path = self.read_path()
                    self.write_u64(os.path.getsize(path))
                elif self.is_id(GoldleafCommandId.FileRead):
                    complete_loading()
                    can_read = True
                    offset = self.read_u64()
                    size = self.read_u64()
                    path = self.read_path()
                    set_cur_nsp(str(os.path.basename(path)))
                    if not os.path.basename(path).lower().endswith('.nsp'):
                        if allow_access_non_nsp:
                            can_read = True
                        else:
                            can_read = False
                    if can_read:
                        with open(path, "rb") as f:
                            f.seek(offset)
                            data = f.read(size)
                        self.write_u64(len(data))
                        self.write(data)
                        try:
                            set_progress(int(offset), int(os.path.getsize(path)))
                            elapsed_time = time.time() - start_time
                            if elapsed_time >= 1:
                                set_cur_transfer_rate(int(offset) - last_transfer_rate)
                                set_last_transfer_rate(int(offset))
                                set_start_time()
                        except Exception as e:
                            print(str(e))
                            pass
                    else:
                        logging.debug("Error: Access denied. \nReason: Goldleaf tried to access a non .NSP file(to bypass this default restriction, change \'allow_access_non_nsp\' to 1 in fluffy.conf).")
                        print("Error: Access denied. \nReason: Goldleaf tried to access a non .NSP file(to bypass this default restriction, change \'allow_access_non_nsp\' to 1 in fluffy.conf).")
                        cancel_task()
                        sys.exit()
                elif self.is_id(GoldleafCommandId.FileWrite):
                    offset = self.read_u64()
                    size = self.read_u64()
                    path = self.read_path()
                    data = self.read(size)
                    get_response_qmessage(1)
                    while not haveresponse and global_dev is not None:                    
                        time.sleep(1)
                    if qresponse:
                        cont = bytearray()
                        try:
                            with open(path, "rb") as f:
                                cont=bytearray(f.read())
                        except FileNotFoundError:
                            pass
                        cont[offset:offset + size] = data
                        with open(path, "wb") as f:
                            f.write(cont)
                    reset_response()
                elif self.is_id(GoldleafCommandId.CreateFile):
                    path = self.read_path()
                    get_response_qmessage(2)
                    while not haveresponse and global_dev is not None:                    
                        time.sleep(1)
                    if qresponse:
                        open(path, "a").close()
                    reset_response()
                elif self.is_id(GoldleafCommandId.CreateDirectory):
                    path = self.read_path()
                    get_response_qmessage(3)
                    while not haveresponse and global_dev is not None:                    
                        time.sleep(1)
                    if qresponse:
                        try:
                            os.mkdir(path)
                        except os.FileExistsError:
                            pass
                    reset_response()
                elif self.is_id(GoldleafCommandId.DeleteFile):
                    path = self.read_path()
                    get_response_qmessage(4)
                    while not haveresponse and global_dev is not None:                    
                        time.sleep(1)
                    if qresponse:
                        os.remove(path)
                    reset_response()
                elif self.is_id(GoldleafCommandId.DeleteDirectory):
                    path = self.read_path()
                    get_response_qmessage(5)
                    while not haveresponse and global_dev is not None:                    
                        time.sleep(1)
                    if qresponse:
                        shutil.rmtree(path)
                    reset_response()
                elif self.is_id(GoldleafCommandId.RenameFile) or self.is_id(GoldleafCommandId.RenameDirectory):
                    path = self.read_path()
                    new_name = self.read_string()
                    get_response_qmessage(6)
                    while not haveresponse and global_dev is not None:                    
                        time.sleep(1)
                    if qresponse:
                        os.rename(path, f"{os.path.dirname(path)}/{new_name}")
                    reset_response()
                elif self.is_id(GoldleafCommandId.GetDriveTotalSpace):
                    path = self.read_path()
                    self.write_u64(psutil.disk_usage(path).total)
                elif self.is_id(GoldleafCommandId.GetDriveFreeSpace):
                    path = self.read_path()
                    self.write_u64(psutil.disk_usage(path).free)

# Tinfoil Network
netrlist = []
def reset_netrlist():
    global netrlist
    netrlist = None
    netrlist = []
def append_netrlist(v, v2):
    global netrlist
    netrlist.append((v, v2))
class TinfoilNetwork:
    def init(self):
        reset_netrlist()
        accepted_extension = ('.nsp')
        hostPort = random.randint(26490,26999)
        target_ip = switch_ip
        hostIp = host_ip
        target_path = str(selected_dir).strip()
        baseUrl = hostIp + ':' + str(hostPort) + '/'
        directory = target_path
        file_list_payload = ''  
        for file in [file for file in next(os.walk(target_path))[2] if file.endswith(accepted_extension)]:
            for y in selected_files:
                if str(file).find(os.path.basename(y)) != -1:
                    n = random.randint(1,10000000)
                    fake_file = str(n) + ".nsp"
                    append_netrlist(fake_file, str(y))
                    file_list_payload += baseUrl + fake_file + '\n'
        file_list_payloadBytes = file_list_payload.encode('ascii')
        if directory and directory != '.':
            os.chdir(directory)
        server = TinfoilServer((host_ip, hostPort), TinfoilHTTPHandler)
        thread = threading.Thread(target=server.serve_forever)
        thread.daemon = True
        thread.start()
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.connect((target_ip, 2000))
            sock.sendall(struct.pack('!L', len(file_list_payloadBytes)) + file_list_payloadBytes)
            while len(sock.recv(1)) < 1:
                time.sleep(0.1)
            sock.close()
        except Exception as e:
            if is_logging:
                logging.error(e, exc_info=True)
            server.force_stop()
            throw_error(1)
            sys.exit()
        complete_install()
        server.force_stop()
        try:
            server.shutdown()
        except:
            pass
        sys.exit()
class TinfoilHTTPHandler(SimpleHTTPRequestHandler):
    def send_head(self):
        for s in range(len(netrlist)):
            if netrlist[s][0] == str(self.path)[1:]:
                path = netrlist[s][1]
        ctype = self.guess_type(path)
        if os.path.isdir(path):
            return SimpleHTTPRequestHandler.send_head(self)
        if not os.path.exists(path):
            return self.send_error(404, self.responses.get(404)[0])
        f = open(path, 'rb')
        fs = os.fstat(f.fileno())
        size = fs[6]
        start, end = 0, size - 1
        if 'Range' in self.headers:
            start, end = self.headers.get('Range').strip().strip('bytes=')\
                .split('-')
        if start == "":
            try:
                end = int(end)
            except ValueError as e:
                self.send_error(400, 'invalid range')
            start = size - end
        else:
            try:
                start = int(start)
            except ValueError as e:
                self.send_error(400, 'invalid range')
            if start >= size:
                self.send_error(416, self.responses.get(416)[0])
            if end == "":
                end = size - 1
            else:
                try:
                    end = int(end)
                except ValueError as e:
                    self.send_error(400, 'invalid range')

        start = max(start, 0)
        end = min(end, size - 1)
        self.range = (start, end)
        cont_length = end - start + 1
        if 'Range' in self.headers:
            self.send_response(206)
        else:
            self.send_response(200)
        self.send_header('Content-type', ctype)
        self.send_header('Accept-Ranges', 'bytes')
        self.send_header('Content-Range','bytes %s-%s/%s' % (start, end, size))
        self.send_header('Content-Length', str(cont_length))
        self.send_header('Last-Modified', self.date_time_string(fs.st_mtime))
        self.end_headers()
        return f

    def copyfile(self, infile, outfile):
        if 'Range' not in self.headers:
            SimpleHTTPRequestHandler.copyfile(self, infile, outfile)
            return
        complete_loading()
        set_cur_nsp(str(os.path.basename(infile.name)))
        start, end = self.range
        infile.seek(start)
        bufsize = 64 * 1024  # 64KB
        while True:
            buf = infile.read(bufsize)
            if not buf:
                break
            try:
                outfile.write(buf)
                try:
                    set_progress(int(infile.tell()), int(end))
                    elapsed_time = time.time() - start_time
                    if elapsed_time >= 1:
                        set_cur_transfer_rate(int(infile.tell()) - last_transfer_rate)
                        set_last_transfer_rate(int(infile.tell()))
                        set_start_time()
                except:
                    pass
            except BrokenPipeError:
                pass    
class TinfoilServer(TCPServer):
    stopped = False
    def server_bind(self):
        import socket
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.socket.bind(self.server_address)
    def serve_forever(self):
        while not self.stopped:
            self.handle_request()             
    def force_stop(self):
        self.server_close()
        self.stopped = True
        sys.exit()
        
    
# Tinfoil USB
class Tinfoil:
    CMD_ID_EXIT = 0
    CMD_ID_FILE_RANGE = 1
    CMD_TYPE_RESPONSE = 1
    
    def init(self):
        try:
            detach_switch()
            connect_switch()
            self.send_nsp_list()
            self.poll_commands()
            complete_install()
            sys.exit()
        except Exception as e:
            if is_logging:
                logging.error(e, exc_info=True)
            throw_error(2)
            sys.exit()
        
    def send_response_header(self, cmd_id, data_size):
        global_out.write(b'TUC0')
        global_out.write(struct.pack('<B', self.CMD_TYPE_RESPONSE))
        global_out.write(b'\x00' * 3)
        global_out.write(struct.pack('<I', cmd_id))
        global_out.write(struct.pack('<Q', data_size))
        global_out.write(b'\x00' * 0xC)
        
    def file_range_cmd(self, data_size):
        file_range_header = global_in.read(0x20)
        range_size = struct.unpack('<Q', file_range_header[:8])[0]
        range_offset = struct.unpack('<Q', file_range_header[8:16])[0]
        nsp_name_len = struct.unpack('<Q', file_range_header[16:24])[0]
        nsp_name = bytes(global_in.read(nsp_name_len)).decode('utf-8')
        set_cur_nsp(str(os.path.basename(nsp_name)))
        self.send_response_header(self.CMD_ID_FILE_RANGE, range_size)
        with open(nsp_name, 'rb') as f:
            complete_loading()
            f.seek(range_offset)
            curr_off = 0x0
            end_off = range_size
            read_size = transfer_rate
            while curr_off < end_off:
                if curr_off + read_size >= end_off:
                    read_size = end_off - curr_off
                    try:
                        set_progress(int(end_off), int(end_off))
                    except:
                        pass
                buf = f.read(read_size)
                global_out.write(data=buf, timeout=0)
                curr_off += read_size
                try:
                    set_progress(int(curr_off), int(end_off))
                    elapsed_time = time.time() - start_time
                    if elapsed_time >= 1:
                        set_cur_transfer_rate(curr_off - last_transfer_rate)
                        set_last_transfer_rate(curr_off)
                        set_start_time()
                except:
                    pass
                
    def poll_commands(self):
        while True:
            cmd_header = bytes(global_in.read(0x20, timeout=0))
            magic = cmd_header[:4]
            if magic != b'TUC0': 
                continue
            cmd_type = struct.unpack('<B', cmd_header[4:5])[0]
            cmd_id = struct.unpack('<I', cmd_header[8:12])[0]
            data_size = struct.unpack('<Q', cmd_header[12:20])[0]
            if cmd_id == self.CMD_ID_EXIT:
                complete_install()
                sys.exit()
            elif cmd_id == self.CMD_ID_FILE_RANGE:
                self.file_range_cmd(data_size)

    def send_nsp_list(self):
        nsp_path_list = list()
        nsp_path_list_len = 0
        for nsp_path in os.listdir(selected_dir):
            if nsp_path.endswith(".nsp"):
                for y in selected_files:
                    if str(nsp_path).find(os.path.basename(y)) != -1:
                        print(str(nsp_path))
                        nsp_path_list.append(selected_dir + "/" + nsp_path.__str__() + '\n')
                        nsp_path_list_len += len(selected_dir + "/" + nsp_path.__str__()) + 1
        global_out.write(b'TUL0')
        global_out.write(struct.pack('<I', nsp_path_list_len))
        global_out.write(b'\x00' * 0x8) 
        for nsp_path in nsp_path_list:
            global_out.write(nsp_path)
        
# Main
try:
    # Images
    aboutpixmap.loadFromData(base64.b64decode(ABOUT_DATA))
    goldpixmap.loadFromData(base64.b64decode(GOLD_DATA))
    iconpixmap.loadFromData(base64.b64decode(ICON_DATA))
    inlaypixmap.loadFromData(base64.b64decode(DONUT_DATA))
    dinlaypixmap.loadFromData(base64.b64decode(DARK_DONUT_DATA))
    
    # Widget Functions
    def send_header_cmd():
        if not sent_header:
            set_canceled(False)
            btn_header.setEnabled(False)
            btn_nsp.setEnabled(False)
            combo.setEnabled(False)
            txt_ip.setEnabled(False)
            txt_ip2.setEnabled(False)
            net_radio.setEnabled(False)
            usb_radio.setEnabled(False)
            txt_port.setEnabled(False)
            tin_radio.setEnabled(False)
            gold_radio.setEnabled(False)
            window.menuBar().setEnabled(False)
            if combo.currentText() == Language.CurrentDict[5]:
                set_transfer_rate(1)
            elif combo.currentText() == Language.CurrentDict[6]:
                set_transfer_rate(0)
            if is_network:
                set_ip(txt_ip.text(), 0)
                set_ip(txt_ip2.text(), 1)
                set_sent_header()
                set_start_time()
                tinnet = TinfoilNetwork()
                thread = threading.Thread(target=tinnet.init)
                thread.daemon = True
                thread.start()
            else:
                if is_goldleaf:
                    set_sent_header()
                    set_start_time()
                    gold = Goldleaf()
                    thread = threading.Thread(target=gold.init)
                    thread.daemon = True
                    thread.start()

                else:
                    set_sent_header()
                    set_start_time()
                    tin = Tinfoil()
                    thread = threading.Thread(target=tin.init)
                    thread.daemon = True
                    thread.start()
        else:
            cancel_task()
        
    def nsp_file_dialog():
        try:
            d = filedialog.askopenfilenames(parent=root,title=Language.CurrentDict[13],filetypes=[("NSP files", "*.nsp")])
            tmp = list()
            list_nsp.clear()
            i = 0
            if not is_goldleaf:
                file_list = list(d)
                for f in file_list:
                    if str(f).endswith(".nsp"):
                        i += 1
                        list_nsp.addItem(os.path.basename(str(f)))
                        tmp.append(f)
            else:
                tmp.append(str(d))
                list_nsp.addItem(os.path.basename(str(d)))
                i+=1
            if i > 0:
                btn_header.setEnabled(True)
                set_total_nsp(i)
                set_dir(os.path.dirname(tmp[0]))
                set_selected_files(tmp)
                l_status.setText(str(total_nsp) + " " + Language.CurrentDict[14])
            else:
                btn_header.setEnabled(False)
                l_status.setText(Language.CurrentDict[9])
        except Exception as e:
            if is_logging:
                logging.error(e, exc_info=True)
            pass
        
    def dark_mode_cmd():
        if dark_check.isChecked():
            try:
                set_dark_mode(0)
            except:
                dark_check.setChecked(False)
                pass
        else:
            set_dark_mode(1)
        
    def tin_radio_cmd():
        l_nsp.setVisible(True)
        combo.setVisible(True)
        l_rate.setVisible(True)
        txt_ip.setEnabled(False)
        txt_ip2.setEnabled(False)
        txt_port.setEnabled(False)
        net_radio.setChecked(False)
        usb_radio.setChecked(True)
        net_radio.setVisible(True)
        set_goldleaf(False)
        split_check.setEnabled(True)
        l_status.setText(Language.CurrentDict[9])
        gold_img_label.setVisible(False)
        btn_header.setEnabled(False)
        btn_nsp.setEnabled(True)
        btn_nsp.setVisible(True)
        l_ip.setVisible(True)
        txt_ip.setVisible(True)
        list_nsp.setVisible(True)
        txt_ip2.setVisible(True)
        l_host.setVisible(True)
        usb_radio.setVisible(True)
        window.adjustSize()
        
        
    def gold_radio_cmd():
        l_nsp.setVisible(False)
        combo.setVisible(False)
        l_rate.setVisible(False)
        txt_ip.setEnabled(False)
        txt_ip2.setEnabled(False)
        txt_port.setEnabled(False)
        net_radio.setChecked(False)
        usb_radio.setChecked(True)
        net_radio.setVisible(False)
        set_network(False)
        set_goldleaf(True)
        split_check.setCheckState(False)
        split_check.setEnabled(False)
        list_nsp.clear()
        l_status.setText('')
        btn_nsp.setVisible(False)
        l_ip.setVisible(False)
        txt_ip.setVisible(False)
        list_nsp.setVisible(False)
        txt_ip2.setVisible(False)
        l_host.setVisible(False)
        usb_radio.setVisible(False)
        gold_img_label.setVisible(True)
        window.adjustSize() 
        
        
        
    def usb_radio_cmd():
        txt_ip.setEnabled(False)
        txt_ip2.setEnabled(False)
        combo.setEnabled(True)
        set_network(False)
        txt_port.setEnabled(False)
        split_check.setEnabled(True)
        
    def net_radio_cmd():
        txt_ip.setEnabled(True)
        txt_ip2.setEnabled(True)
        combo.setEnabled(False)
        set_network(True)
        txt_port.setEnabled(True)
        split_check.setCheckState(False)
        split_check.setEnabled(False)
        
            
    def set_done_text():
        tmp_string = str(total_nsp)
        if not is_goldleaf:
            reset_install()
            l_nsp.setText(Language.CurrentDict[8] + " " + tmp_string + " NSP(s)!")
        
    def set_loading_text():
        l_nsp.setText("")
        l_status.setText("")
        if not is_goldleaf:
            l_switch.setText(str(total_nsp) + " " + Language.CurrentDict[26] + ".")
            l_switch.setStyleSheet(PURPLE)
        else:
            l_switch.setText(Language.CurrentDict[9] + ".")
            l_switch.setStyleSheet(BLUE)
            progressbar.setValue(0)

    def set_progress_text():
        v = (int(cur_progress) / int(end_progress)) * 100
        progressbar.setValue(v)
        n_rate = round((cur_transfer_rate /1000000),2)
        if n_rate < 0:
            n_rate = 0.0
        if not is_goldleaf:
            l_status.setText(Language.CurrentDict[27] + " " + str(cur_nsp_count) + " / " + str(total_nsp) + " NSP(s).")
        l_switch.setText(Language.CurrentDict[28] + ": " + str(n_rate) + "MB/s.")
        l_switch.setStyleSheet(GREEN)
        l_status.setStyleSheet(GREEN)
        if len(cur_nsp_name) > 13:
            if is_goldleaf:
                l_status.setText("\"" + cur_nsp_name[:13] + "...\"")
            else:
                l_nsp.setText(Language.CurrentDict[7] + ": \"" + cur_nsp_name[:13] + "...\"")
        else:
            if is_goldleaf:
                l_status.setText("\"" + cur_nsp_name + "\"")
            else:
                l_nsp.setText(Language.CurrentDict[7] + ": \"" + cur_nsp_name + "\"")

    def set_switch_text():
        if connect_switch():
            l_switch.setText(Language.CurrentDict[11]+"!")
            l_switch.setStyleSheet(GREEN)
            if not is_goldleaf:
                if list_nsp.count() > 0:
                    btn_header.setEnabled(True)
                else:
                    btn_header.setEnabled(False)
            else:
                btn_header.setEnabled(True)
        else:
            l_switch.setText(Language.CurrentDict[10]+"!")
            btn_header.setEnabled(False)
            l_switch.setStyleSheet(RED)
            try:
                detach_switch()
            except:
                pass
                    
    #Init Widgets
    l_host = QtWidgets.QLabel(Language.CurrentDict[3]+":")
    txt_ip2 = QtWidgets.QLineEdit("0.0.0.0")
    try:
        fill = [(s.connect(('8.8.8.8', 53)), s.getsockname()[0], s.close()) for s in [socket.socket(socket.AF_INET, socket.SOCK_DGRAM)]][0][1]
        txt_ip2.setText(str(fill))
    except:
        pass
    l_nsp = QtWidgets.QLabel("")
    l_ip = QtWidgets.QLabel(Language.CurrentDict[2]+":")
    l_port = QtWidgets.QLabel("Port:")
    txt_ip = QtWidgets.QLineEdit("0.0.0.0")
    tin_radio = QtWidgets.QRadioButton("Tinfoil")
    gold_radio = QtWidgets.QRadioButton("Goldleaf")
    split_check = QtWidgets.QCheckBox("Use Split NSP")
    dark_check = QtWidgets.QCheckBox(Language.CurrentDict[20])
    usb_radio = QtWidgets.QRadioButton("USB")
    net_radio = QtWidgets.QRadioButton(Language.CurrentDict[24])
    btn_nsp = QtWidgets.QPushButton(Language.CurrentDict[13])
    btn_header = QtWidgets.QPushButton(Language.CurrentDict[1])
    l_rate = QtWidgets.QLabel(Language.CurrentDict[4])
    l_github = QtWidgets.QLabel("v" + VERSION)
    l_status = QtWidgets.QLabel(Language.CurrentDict[9])
    l_switch = QtWidgets.QLabel(Language.CurrentDict[10]+"!")
    list_nsp = QtWidgets.QListWidget()
    combo = QComboBox()
    
    #Set Widgets
    try:
        txt_ip.setText(switch_ip)
    except:
        txt_ip.setText("0.0.0.0")
        pass
    txt_ip.setEnabled(False)
    txt_ip2.setEnabled(False)
    txt_port = QtWidgets.QLineEdit("2000")
    txt_port.setEnabled(False)
    h_box = QtWidgets.QHBoxLayout()
    h2_box = QtWidgets.QHBoxLayout()
    h3_box = QtWidgets.QHBoxLayout()
    h3_box.addWidget(dark_check)
    h3_box.addStretch()
    h3_box.addWidget(l_github)
    h_group = QtWidgets.QButtonGroup()
    combo.addItem(Language.CurrentDict[6])
    combo.addItem(Language.CurrentDict[5])
    combo.setCurrentIndex(1)
    tin_radio.setChecked(True)
    tin_radio.toggled.connect(tin_radio_cmd)
    gold_radio.setChecked(False)
    gold_radio.toggled.connect(gold_radio_cmd)
    h_group.addButton(tin_radio)
    h_group.addButton(gold_radio)
    h2_box.addWidget(tin_radio)
    h2_box.addWidget(gold_radio)
    dark_check.stateChanged.connect(dark_mode_cmd)
    usb_radio.setChecked(True)
    usb_radio.toggled.connect(usb_radio_cmd)
    h_box.addWidget(usb_radio)
    net_radio.toggled.connect(net_radio_cmd)
    h_box.addWidget(net_radio)
    btn_header.setEnabled(False)
    progressbar = QProgressBar()
    progressbar.setAlignment(Qt.AlignVCenter)
    progressbar.setMaximum(100)
    v_box = QtWidgets.QVBoxLayout()
    img_label = QLabel()
    img_label.setAlignment(Qt.AlignCenter)
    gold_img_label = QLabel()
    gold_img_label.setAlignment(Qt.AlignCenter)
    gold_img_label.setPixmap(goldpixmap)

    # Language Init
    def init_language():
        l_nsp.setText("")
        if not is_goldleaf:
            if list_nsp.count() > 0:
                l_status.setText(str(total_nsp) + " " + Language.CurrentDict[14])
            else:
                l_status.setText(Language.CurrentDict[9])
        l_switch.setText(Language.CurrentDict[10]+"!")
        l_ip.setText(Language.CurrentDict[2]+":")
        dark_check.setText(Language.CurrentDict[20])
        net_radio.setText(Language.CurrentDict[24])
        btn_nsp.setText(Language.CurrentDict[13])
        btn_header.setText(Language.CurrentDict[1])
        l_rate.setText(Language.CurrentDict[4])
        combo.clear()
        combo.SelectedIndex = 0
        combo.addItem(Language.CurrentDict[5])
        combo.addItem(Language.CurrentDict[6])
        l_host.setText(Language.CurrentDict[3]+":")
        lang_menu.setTitle(Language.CurrentDict[22])
        window.setWindowTitle(Language.CurrentDict[0])
        
    # Menu Bar
    def lang_menu_cmd():
        new_lang = None
        ai = 0
        for action in lang_menu.actions():
            if action.isChecked():
                if ai != language:
                        set_language(ai)
                        init_language()     
            ai+=1
    # About Window
    about = QMainWindow()
    about_v_box = QtWidgets.QVBoxLayout()
    about_v_box.setContentsMargins(0,0,0,0)
    credit_list = QtWidgets.QListWidget()
    about_img_label = QLabel()
    l_thanks = QtWidgets.QLabel("Special Thanks")
    about_img_label.setAlignment(Qt.AlignCenter)
    l_thanks.setAlignment(Qt.AlignCenter)
    about_img_label.setPixmap(aboutpixmap)
    about_v_box.addWidget(about_img_label)
    about_v_box.addWidget(l_thanks)
    about_v_box.addWidget(credit_list)
    about.setCentralWidget(QWidget(about))
    about.centralWidget().setLayout(about_v_box)
    about.setWindowTitle("About")
    for a in thanks:
        credit_list.addItem(a)
    def about_menu_cmd():
        try:
            about.show()
            about.setFixedSize(about.size().width(),about.size().height())
        except Exception as e:
            print(str(e))
                
    lang_menu = window.menuBar().addMenu(Language.CurrentDict[22])
    about_menu = window.menuBar().addAction("About")
    lang_group = QActionGroup(lang_menu)
    lang_group.setExclusive(True)
    lang_group.addAction(QAction('English',lang_group,checkable=True))
    lang_group.addAction(QAction('中文',lang_group,checkable=True))
    lang_group.addAction(QAction('Tiếng Việt',lang_group,checkable=True))
    lang_group.addAction(QAction('Türkçe',lang_group,checkable=True))
    lang_group.addAction(QAction('Português Brasileiro',lang_group,checkable=True))
    lang_group.addAction(QAction('Italiano',lang_group,checkable=True))
    lang_group.addAction(QAction('Français',lang_group,checkable=True))
    lang_group.addAction(QAction('Español',lang_group,checkable=True))
    lang_group.addAction(QAction('Deutsch',lang_group,checkable=True))
    lang_group.addAction(QAction('Bahasa Indonesia',lang_group,checkable=True))
    lang_menu.addActions(lang_group.actions())
    lang_group.triggered.connect(lang_menu_cmd)
    about_menu.triggered.connect(about_menu_cmd)

    # Set Language
    aix = 0
    for action in lang_menu.actions():
        if aix == language:
            action.setChecked(True)
        aix+=1
        
    init_language()
                
    
    # Occupy VBOX
    v_box.addLayout(h2_box)
    v_box.addWidget(img_label)
    v_box.addStretch()
    v_box.addWidget(gold_img_label)
    v_box.addStretch()
    v_box.addLayout(h_box)
    v_box.addWidget(l_ip)
    v_box.addWidget(txt_ip)
    v_box.addWidget(l_host)
    v_box.addWidget(txt_ip2)
    v_box.addWidget(l_rate)
    v_box.addWidget(combo)
    v_box.addWidget(btn_nsp)
    v_box.addWidget(btn_header)
    v_box.addWidget(l_nsp)
    v_box.addWidget(l_status)
    v_box.addWidget(l_switch)
    v_box.addWidget(progressbar)
    v_box.addWidget(list_nsp)
    v_box.addLayout(h3_box)
    window.setCentralWidget(QWidget(window))
    window.centralWidget().setLayout(v_box)
    window.setWindowTitle(Language.CurrentDict[0])
    btn_nsp.clicked.connect(nsp_file_dialog)
    btn_header.clicked.connect(send_header_cmd)
    window.setWindowIcon(QIcon(iconpixmap))
    gold_img_label.setVisible(False)
    window.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Minimum)
    window.show()

    # Revert to network mode
    if not usb_success:
        net_radio_cmd()
        net_radio.setChecked(True)
        usb_radio.setVisible(False)
        l_rate.setVisible(False)
        combo.setVisible(False)
        gold_radio.setVisible(False)
        l_switch.setText(Language.CurrentDict[12])
        l_switch.setStyleSheet(BLUE)
    if dark_mode == 0:
        try:
            set_dark_mode(0)
            dark_check.setChecked(True)
        except:
            set_dark_mode(1)
            dark_check.setChecked(False)
            pass
    else:
        set_dark_mode(1)
        dark_check.setChecked(False)
    
    # Main loop
    while True:
        # QMessage Response
        if needresponse:
            if ignore_warning_prompt == 0:
                print("To ignore future prompts, change \'ignore_warning_prompt\' to 1 in fluffy.conf.")
                if qrespnum == 0:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to read a file that isn't an NSP.\nLet Goldleaf read this file?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
                elif qrespnum == 1:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to write a file.\nConfirm file write?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
                elif qrespnum == 2:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to create a file.\nConfirm creation?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
                elif qrespnum == 3:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to create a directory.\nConfirm creation?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
                elif qrespnum == 4:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to delete a file.\nConfirm deletion?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
                elif qrespnum == 5:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to delete a directory.\nConfirm deletion?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
                elif qrespnum == 6:
                    re = QMessageBox.warning(window, 'Warning!', "Goldleaf wants to rename a file or directory.\nConfirm rename?", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
                    if re == QMessageBox.No:
                        set_response_qmessage(False)
                    elif re == QMessageBox.Yes:
                        set_response_qmessage(True)
            else:
                set_response_qmessage(True)
            while haveresponse:
                time.sleep(1)
        # Error Handling
        if last_error != "NA":
            if not task_canceled:
                msg_box = QMessageBox.critical(window, 'Error', last_error, QMessageBox.Ok)
            reset_last_error()
            reset_install()
            
        # Logging
        if is_logging:
            if os.path.isfile(initial_dir + 'fluffy.log'):
                if os.path.getsize(initial_dir + 'fluffy.log') > 250000:
                    logging.debug("Fluffy Log: Logging size reached, turning off logging.")
                    turn_off_logging()
            if os.path.isfile('fluffy.log'):
                if os.path.getsize('fluffy.log') > 250000:
                    logging.debug("Fluffy Log: Logging size reached, turning off logging.")
                    turn_off_logging()
                    
        QApplication.processEvents()
        
        # Save config and close
        if not window.isVisible():
            try:
                switch_ip = txt_ip.text()
            except:
                pass
            save_config()
            pid = os.getpid()
            os.kill(pid, signal.SIGTERM)
            sys.exit()
            
                
        # Switch Indicator
        if not is_installing and not is_network and usb_success and not sent_header:
            set_switch_text()
                    
        # Tinfoil Network Mode
        if not sent_header and not is_installing and is_network:
            l_switch.setText(Language.CurrentDict[12])
            l_switch.setStyleSheet(BLUE)
            if list_nsp.count() > 0:
                btn_header.setEnabled(True)
            else:
                btn_header.setEnabled(False)
                
        # Network Header Sent
        if sent_header and is_network:
            try:
                if is_done:
                    set_done_text()
                else:
                    if is_installing:
                        set_progress_text()
                    else:
                        l_status.setText(Language.CurrentDict[25])
                        l_switch.setText(Language.CurrentDict[15])
                        l_switch.setStyleSheet(PURPLE)
            except:
                pass
            
        # Cancel Button
        if sent_header and not is_installing and not is_done:
            btn_header.setEnabled(True)
            btn_header.setText(Language.CurrentDict[16])

        # Installation in progress, no cancel
        if sent_header and is_installing and not is_done:
            btn_header.setEnabled(False)
            
        # Goldleaf & Tinfoil USB Mode
        if sent_header and not is_network:
            try:
                if is_done:
                    set_done_text()
                else:
                    if is_installing:
                        set_progress_text()
                    else:
                        set_loading_text()
            except:
                pass
            
except Exception as e:
    if is_logging:
        logging.error(e, exc_info=True)
    save_config()
    pid = os.getpid()
    os.kill(pid, signal.SIGTERM)
    exit()
